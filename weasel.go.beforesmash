package main

import (
	"fmt"
	"log"
	"os"
	"net/http"
	"html/template"
	"strings"
	
	"github.com/mightyweasel/goweasel/weaselroutehandler"	
	"github.com/mightyweasel/goweasel/weaselgui"

	"github.com/gorilla/mux"
	"github.com/gorilla/schema"
	"github.com/joho/godotenv"

	//"github.com/go-pg/pg"
)


const fav_icon_url = "http://www.canada.ca/etc/designs/canada/wet-boew/assets/favicon.ico"

func main() {
	env := os.Getenv("ENVIRONMENT")
	if "" == env {
	  env = "development"
	}
	godotenv.Load(".env." + env + ".local")

	if os.Getenv("ENVIRONMENT") == "production" {
		fmt.Println("Init "+os.Getenv("ENVIRONMENT")+" Webserver")
	}
	if os.Getenv("ENVIRONMENT") == "development" {
		fmt.Println("Init "+os.Getenv("ENVIRONMENT")+" Webserver")
	}

	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	decoder  = schema.NewDecoder()
	decoder.IgnoreUnknownKeys(true)

	r := mux.NewRouter()

	fmt.Println("Starting "+os.Getenv("ENVIRONMENT")+" Webserver at port " + port)
	r.HandleFunc("/", IndexHandler)
	r.HandleFunc("/guide/", GuideHandler)
	r.HandleFunc("/search/{q}", SearchHandler)
	r.HandleFunc("/redirect/{q}", RedirectHandler)
	
	http.Handle("/", r)

	log.Fatal(http.ListenAndServe(":"+port, r))
}

